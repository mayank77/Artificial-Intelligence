# -*- coding: utf-8 -*-
"""
Created on Tue Mar 21 13:54:58 2017

@author: mayank
"""

########################
# THE BEST MOVES STARTING FROM BOTTOM LEFT TO TOP RIGHT IN A RIGHT-UP FASHION IS
#UP
#RIGHT
#UP
#LEFT
#UP
#UP
#UP
#RIGHT
#RIGHT
#RIGHT
#UP
#NUMBER OF ITERATIONS : 61
########################


v0 = [0,0,0,0,0,0,0,0,0,0,0];
v1 = [2,2,2,2,2,2,2,2,2,2,2];
R = [0,0,0,0,0,0,-1,0,0,0,1];
best = [0,0,0,0,0,0,0,0,0,0,0];

cont = 1

counter = 1

while cont==1:
    
    counter = counter + 1
    
    vals = [0.1*(0.0+0.95*v0[8]) + 0.8*(0.0+0.95*v0[9]) + 0.1*(1.0+0.95*v0[10]), 0.1*(0.0+0.95*v0[9]) + 0.8*(1.0+0.95*v0[10]) + 0.1*(0.0+0.95*v0[5]), 0.1*(1.0+0.95*v0[10]) + 0.8*(0.0+0.95*v0[5]) + 0.1*(0.0+0.95*v0[8]), 0.1*(0.0+0.95*v0[5]) + 0.8*(0.0+0.95*v0[8]) + 0.1*(0.0+0.95*v0[9])]
    v1[9] = max(vals)
    best[9] = vals.index(max(vals))
    
    vals = [0.1*(0.0+0.95*v0[7]) + 0.8*(0.0+0.95*v0[8]) + 0.1*(0.0+0.95*v0[9]), 0.1*(0.0+0.95*v0[8]) + 0.8*(0.0+0.95*v0[9]) + 0.1*(0.0+0.95*v0[8]), 0.1*(0.0+0.95*v0[9]) + 0.8*(0.0+0.95*v0[8]) + 0.1*(0.0+0.95*v0[7]), 0.1*(0.0+0.95*v0[8]) + 0.8*(0.0+0.95*v0[7]) + 0.1*(0.0+0.95*v0[8])]
    v1[8] = max(vals)
    best[8] = vals.index(max(vals))    
    
    vals = [0.1*(0.0+0.95*v0[7]) + 0.8*(0.0+0.95*v0[7]) + 0.1*(0.0+0.95*v0[8]), 0.1*(0.0+0.95*v0[7]) + 0.8*(0.0+0.95*v0[8]) + 0.1*(0.0+0.95*v0[4]), 0.1*(0.0+0.95*v0[8]) + 0.8*(0.0+0.95*v0[4]) + 0.1*(0.0+0.95*v0[7]), 0.1*(0.0+0.95*v0[4]) + 0.8*(0.0+0.95*v0[7]) + 0.1*(0.0+0.95*v0[7])]
    v1[7] = max(vals)   
    best[7] = vals.index(max(vals))
    
    vals = [0.1*(0.0+0.95*v0[5]) + 0.8*(1.0+0.95*v0[10]) + 0.1*(-1.0+0.95*v0[6]), 0.1*(1.0+0.95*v0[10])+0.8*(-1.0+0.95*v0[6])+0.1*(0.0+0.95*v0[3]), 0.1*(-1.0+0.95*v0[6]) + 0.8*(0.0+0.95*v0[3]) + 0.1*(0.0+0.95*v0[5]) , 0.1*(0.0+0.95*v0[3]) + 0.8*(0.0+0.95*v0[5]) + 0.1*(1.0+0.95*v0[10])]
    v1[6] = max(vals)   
    best[6] = vals.index(max(vals))
       
    vals = [0.1*(0.0+0.95*v0[5]) + 0.8*(0.0+0.95*v0[9]) + 0.1*(-1.0+0.95*v0[6]), 0.1*(0.0+0.95*v0[9]) + 0.8*(-1.0+0.95*v0[6]) + 0.1*(0.0+0.95*v0[2]), 0.1*(-1.0+0.95*v0[6]) + 0.8*(0.0+0.95*v0[2]) + 0.1*(0.0+0.95*v0[5]), 0.1*(0.0+0.95*v0[2]) + 0.8*(0.0+0.95*v0[5]) + 0.1*(0.0+0.95*v0[9])]
    v1[5] = max(vals)
    best[5] = vals.index(max(vals))
    
    vals = [0.1*(0.0+0.95*v0[4]) + 0.8*(0.0+0.95*v0[7]) + 0.1*(0.0+0.95*v0[4]), 0.1*(0.0+0.95*v0[7]) + 0.8*(0.0+0.95*v0[4]) + 0.1*(0.0+0.95*v0[0]), 0.1*(0.0+0.95*v0[4]) + 0.8*(0.0+0.95*v0[0]) + 0.1*(0.0+0.95*v0[4]), 0.1*(0.0+0.95*v0[0]) + 0.8*(0.0+0.95*v0[4]) + 0.1*(0.0+0.95*v0[7])]
    v1[4] = max(vals)
    best[4] = vals.index(max(vals))
     
    vals = [0.1*(0.0+0.95*v0[2]) + 0.8*(-1.0+0.95*v0[6]) + 0.1*(0.0+0.95*v0[3]), 0.1*(-1.0+0.95*v0[6]) + 0.8*(0.0+0.95*v0[3]) + 0.1*(0.0+0.95*v0[3]), 0.1*(0.0+0.95*v0[3]) + 0.8*(0.0+0.95*v0[3]) + 0.1*(0.0+0.95*v0[2]), 0.1*(0.0+0.95*v0[3]) + 0.8*(0.0+0.95*v0[2]) + 0.1*(-1.0+0.95*v0[6])]
    v1[3] = max(vals)
    best[3] = vals.index(max(vals))
   
    vals = [0.1*(0.0+0.95*v0[1]) + 0.8*(0.0+0.95*v0[5]) + 0.1*(0.0+0.95*v0[3]), 0.1*(0.0+0.95*v0[5]) + 0.8*(0.0+0.95*v0[3]) + 0.1*(0.0+0.95*v0[2]), 0.1*(0.0+0.95*v0[3]) + 0.8*(0.0+0.95*v0[2]) + 0.1*(0.0+0.95*v0[1]), 0.1*(0.0+0.95*v0[2]) + 0.8*(0.0+0.95*v0[1]) + 0.1*(0.0+0.95*v0[5])]
    v1[2] = max(vals)
    best[2] = vals.index(max(vals))
    
    vals = [0.1*(0.0+0.95*v0[0]) + 0.8*(0.0+0.95*v0[1]) + 0.1*(0.0+0.95*v0[2]), 0.1*(0.0+0.95*v0[1]) + 0.8*(0.0+0.95*v0[2]) + 0.1*(0.0+0.95*v0[1]), 0.1*(0.0+0.95*v0[2]) + 0.8*(0.0+0.95*v0[1]) + 0.1*(0.0+0.95*v0[0]), 0.1*(0.0+0.95*v0[1]) + 0.8*(0.0+0.95*v0[0]) + 0.1*(0.0+0.95*v0[1])]
    v1[1] = max(vals)
    best[1] = vals.index(max(vals))
    
    vals = [0.1*(0.0+0.95*v0[0]) + 0.8*(0.0+0.95*v0[4]) + 0.1*(0.0+0.95*v0[1]), 0.1*(0.0+0.95*v0[4]) + 0.8*(0.0+0.95*v0[1]) + 0.1*(0.0+0.95*v0[0]), 0.1*(0.0+0.95*v0[1]) + 0.8*(0.0+0.95*v0[0]) + 0.1*(0.0+0.95*v0[0]), 0.1*(0.0+0.95*v0[0]) + 0.8*(0.0+0.95*v0[0]) + 0.1*(0.0+0.95*v0[4])]
    v1[0] = max(vals)
    best[0] = vals.index(max(vals))  
    v1[10] = v0[0]
    best[10] = best[0]
    for i in range(0,11):
        if v1[i]-v0[i]>0.01:
            cont=1
            break
        else:
            cont=0
    if cont==0:
        for i in range(0,11):
            if best[i]==0:
                print("UP")
            if best[i]==1:
                print("RIGHT")
            if best[i]==2:
                print("DOWN")
            if best[i]==3:
                print("LEFT")
    for i in range(0,11):
        v0[i]=v1[i]
            
print counter
print v1